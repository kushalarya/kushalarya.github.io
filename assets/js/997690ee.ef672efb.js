"use strict";(self.webpackChunkkushalarya_com=self.webpackChunkkushalarya_com||[]).push([[1323],{5674:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>o,frontMatter:()=>s,metadata:()=>t,toc:()=>a});var r=i(5893),l=i(4137);const s={},c="Grind 75",t={id:"InterviewHandbook/GeneralNotes",title:"Grind 75",description:"Array",source:"@site/docs/InterviewHandbook/GeneralNotes.md",sourceDirName:"InterviewHandbook",slug:"/InterviewHandbook/GeneralNotes",permalink:"/notebook/InterviewHandbook/GeneralNotes",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Interview Handbook",permalink:"/notebook/InterviewHandbook/"},next:{title:"Pets",permalink:"/notebook/Pets/"}},d={},a=[{value:"Array",id:"array",level:2},{value:"Hash table",id:"hash-table",level:2},{value:"Math",id:"math",level:2},{value:"Matrix",id:"matrix",level:2},{value:"Linked lists",id:"linked-lists",level:2},{value:"Binary",id:"binary",level:2},{value:"Binary search",id:"binary-search",level:2},{value:"Recursion",id:"recursion",level:2},{value:"Stack",id:"stack",level:2},{value:"String",id:"string",level:2},{value:"Queue",id:"queue",level:2},{value:"Binsry search tree",id:"binsry-search-tree",level:2},{value:"Binary tree",id:"binary-tree",level:2},{value:"Graph",id:"graph",level:2},{value:"Heap",id:"heap",level:2},{value:"Trie",id:"trie",level:2},{value:"Dynamic Programming",id:"dynamic-programming",level:2},{value:"Microservices",id:"microservices",level:2},{value:"AlgoMonster",id:"algomonster",level:2}];function h(e){const n={a:"a",h1:"h1",h2:"h2",hr:"hr",li:"li",ol:"ol",ul:"ul",...(0,l.ah)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"grind-75",children:"Grind 75"}),"\n",(0,r.jsx)(n.h2,{id:"array",children:"Array"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Two Sum"}),"\n",(0,r.jsx)(n.li,{children:"Best Time to Buy and Sell Stock"}),"\n",(0,r.jsx)(n.li,{children:"Majority Element"}),"\n",(0,r.jsx)(n.li,{children:"Contains Duplicate"}),"\n",(0,r.jsx)(n.li,{children:"Meeting Rooms"}),"\n",(0,r.jsx)(n.li,{children:"Move Zeroes"}),"\n",(0,r.jsx)(n.li,{children:"Squares of a Sorted Array"}),"\n",(0,r.jsx)(n.li,{children:"Insert Interval"}),"\n",(0,r.jsx)(n.li,{children:"3Sum"}),"\n",(0,r.jsx)(n.li,{children:"Product of Array Except Self"}),"\n",(0,r.jsx)(n.li,{children:"Combination Sum"}),"\n",(0,r.jsx)(n.li,{children:"Merge Intervals"}),"\n",(0,r.jsx)(n.li,{children:"Sort Colors"}),"\n",(0,r.jsx)(n.li,{children:"Container with most water"}),"\n",(0,r.jsx)(n.li,{children:"Gas station"}),"\n",(0,r.jsx)(n.li,{children:"Longest consecutive sequence"}),"\n",(0,r.jsx)(n.li,{children:"Rotate array"}),"\n",(0,r.jsx)(n.li,{children:"Contiguous array"}),"\n",(0,r.jsx)(n.li,{children:"Subarray sum equals K"}),"\n",(0,r.jsx)(n.li,{children:"Meeting rooms 2"}),"\n",(0,r.jsx)(n.li,{children:"3Sum closest"}),"\n",(0,r.jsx)(n.li,{children:"Non-overlapping intervals"}),"\n",(0,r.jsx)(n.li,{children:"Employee free time"}),"\n",(0,r.jsx)(n.li,{children:"Sliding window maximum"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"hash-table",children:"Hash table"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Ransom Note"}),"\n",(0,r.jsx)(n.li,{children:"Insert Delete GetRandom O(1)"}),"\n",(0,r.jsx)(n.li,{children:"First missing positive"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"math",children:"Math"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Roman to integer"}),"\n",(0,r.jsx)(n.li,{children:"Palindrome number"}),"\n",(0,r.jsx)(n.li,{children:"Random pick with weight"}),"\n",(0,r.jsx)(n.li,{children:"Pow(x, n)"}),"\n",(0,r.jsx)(n.li,{children:"Reverse integer"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"matrix",children:"Matrix"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Spiral matrix"}),"\n",(0,r.jsx)(n.li,{children:"Valid sudoku"}),"\n",(0,r.jsx)(n.li,{children:"Rotate image"}),"\n",(0,r.jsx)(n.li,{children:"Set matrix zeroes"}),"\n",(0,r.jsx)(n.li,{children:"Sudoku solver"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"linked-lists",children:"Linked lists"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Merge two sorted lists"}),"\n",(0,r.jsx)(n.li,{children:"Linked list cycle"}),"\n",(0,r.jsx)(n.li,{children:"Reverse linked list"}),"\n",(0,r.jsx)(n.li,{children:"Middle of the Linked list"}),"\n",(0,r.jsx)(n.li,{children:"Palindrome Linked list"}),"\n",(0,r.jsx)(n.li,{children:"LRU Cache"}),"\n",(0,r.jsx)(n.li,{children:"Remove nth node from end of list"}),"\n",(0,r.jsx)(n.li,{children:"Swap nodes in pairs"}),"\n",(0,r.jsx)(n.li,{children:"Odd even linked list"}),"\n",(0,r.jsx)(n.li,{children:"Add two numbers"}),"\n",(0,r.jsx)(n.li,{children:"Sort List"}),"\n",(0,r.jsx)(n.li,{children:"Reorder list"}),"\n",(0,r.jsx)(n.li,{children:"rotate list"}),"\n",(0,r.jsx)(n.li,{children:"Reverse nodes in k-group"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"binary",children:"Binary"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Add binary"}),"\n",(0,r.jsx)(n.li,{children:"Counding bits"}),"\n",(0,r.jsx)(n.li,{children:"Number of 1 bits"}),"\n",(0,r.jsx)(n.li,{children:"Single number"}),"\n",(0,r.jsx)(n.li,{children:"Missing number"}),"\n",(0,r.jsx)(n.li,{children:"Reverse bits"}),"\n",(0,r.jsx)(n.li,{children:"Find the duplicate number"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"binary-search",children:"Binary search"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Binary search"}),"\n",(0,r.jsx)(n.li,{children:"First bad version"}),"\n",(0,r.jsx)(n.li,{children:"Search in rotated sorted array"}),"\n",(0,r.jsx)(n.li,{children:"Time based key-value store"}),"\n",(0,r.jsx)(n.li,{children:"Search a 2D matrix"}),"\n",(0,r.jsx)(n.li,{children:"Find Minimum in rotated sorted array"}),"\n",(0,r.jsx)(n.li,{children:"Maximum profit in job scheduling"}),"\n",(0,r.jsx)(n.li,{children:"Median of two sorted array"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"recursion",children:"Recursion"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Permutations"}),"\n",(0,r.jsx)(n.li,{children:"Subsets"}),"\n",(0,r.jsx)(n.li,{children:"Letter combinations of a phone number"}),"\n",(0,r.jsx)(n.li,{children:"Next permutation"}),"\n",(0,r.jsx)(n.li,{children:"Generate parentheses"}),"\n",(0,r.jsx)(n.li,{children:"N-Queens"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"stack",children:"Stack"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Valid parenthesis"}),"\n",(0,r.jsx)(n.li,{children:"Implement queue using stacks"}),"\n",(0,r.jsx)(n.li,{children:"backspace string compare"}),"\n",(0,r.jsx)(n.li,{children:"evaluate reverse polish notation"}),"\n",(0,r.jsx)(n.li,{children:"Min stack"}),"\n",(0,r.jsx)(n.li,{children:"Daily temperatures"}),"\n",(0,r.jsx)(n.li,{children:"Decode string"}),"\n",(0,r.jsx)(n.li,{children:"Asteroid collision"}),"\n",(0,r.jsx)(n.li,{children:"Basic calculatro 2"}),"\n",(0,r.jsx)(n.li,{children:"Trapping rain water"}),"\n",(0,r.jsx)(n.li,{children:"Basic calculator"}),"\n",(0,r.jsx)(n.li,{children:"Largest rectangale in histogram"}),"\n",(0,r.jsx)(n.li,{children:"Maximum ferquency stack"}),"\n",(0,r.jsx)(n.li,{children:"Longest valid parenthesis"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"string",children:"String"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Valid palindrome"}),"\n",(0,r.jsx)(n.li,{children:"Valid anagram"}),"\n",(0,r.jsx)(n.li,{children:"Longest palindrome"}),"\n",(0,r.jsx)(n.li,{children:"Longest common prefix"}),"\n",(0,r.jsx)(n.li,{children:"Longest substring without repeating characters"}),"\n",(0,r.jsx)(n.li,{children:"String to integer (atoi)"}),"\n",(0,r.jsx)(n.li,{children:"Longest palindromic substring"}),"\n",(0,r.jsx)(n.li,{children:"Find all anagrams in a string"}),"\n",(0,r.jsx)(n.li,{children:"Group anagrams"}),"\n",(0,r.jsx)(n.li,{children:"Longest repeating character replacement"}),"\n",(0,r.jsx)(n.li,{children:"Largest number"}),"\n",(0,r.jsx)(n.li,{children:"Encode and decode strings"}),"\n",(0,r.jsx)(n.li,{children:"Minimum window substring"}),"\n",(0,r.jsx)(n.li,{children:"Palindrome pairs"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"queue",children:"Queue"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Design hit counter"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"binsry-search-tree",children:"Binsry search tree"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Lowest common ancestor of a binary search tree"}),"\n",(0,r.jsx)(n.li,{children:"Convert sorted array to binary search tree"}),"\n",(0,r.jsx)(n.li,{children:"Validate binary search tree"}),"\n",(0,r.jsx)(n.li,{children:"Kth smallest element in BST"}),"\n",(0,r.jsx)(n.li,{children:"Inorder successor in BST"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"binary-tree",children:"Binary tree"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Invert binary tree"}),"\n",(0,r.jsx)(n.li,{children:"Balanced binary tree"}),"\n",(0,r.jsx)(n.li,{children:"Diameter of binary tree"}),"\n",(0,r.jsx)(n.li,{children:"Maximum depth of binary tree"}),"\n",(0,r.jsx)(n.li,{children:"Same tree"}),"\n",(0,r.jsx)(n.li,{children:"Subtree of another tree"}),"\n",(0,r.jsx)(n.li,{children:"Binary tree level order traversal"}),"\n",(0,r.jsx)(n.li,{children:"Lowest common ancestor of a binary tree"}),"\n",(0,r.jsx)(n.li,{children:"Binary tree right side view"}),"\n",(0,r.jsx)(n.li,{children:"Construct binary tree from preorder and inorder traversal"}),"\n",(0,r.jsx)(n.li,{children:"Path sum 2"}),"\n",(0,r.jsx)(n.li,{children:"Maximum width of binary tree"}),"\n",(0,r.jsx)(n.li,{children:"binary tree zigzag level order traversal"}),"\n",(0,r.jsx)(n.li,{children:"Path sum 3"}),"\n",(0,r.jsx)(n.li,{children:"All nodes distance K in binary tree"}),"\n",(0,r.jsx)(n.li,{children:"Serialize and deserialize binary tree"}),"\n",(0,r.jsx)(n.li,{children:"Binary tree maximum path sum"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"graph",children:"Graph"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Flood fill"}),"\n",(0,r.jsx)(n.li,{children:"01 Matrix"}),"\n",(0,r.jsx)(n.li,{children:"Clone graph"}),"\n",(0,r.jsx)(n.li,{children:"Course schedule"}),"\n",(0,r.jsx)(n.li,{children:"Number of islands"}),"\n",(0,r.jsx)(n.li,{children:"Rotting oranges"}),"\n",(0,r.jsx)(n.li,{children:"Accounts merge"}),"\n",(0,r.jsx)(n.li,{children:"Word search"}),"\n",(0,r.jsx)(n.li,{children:"Minimum Height tree"}),"\n",(0,r.jsx)(n.li,{children:"Pacific atlantic water flow"}),"\n",(0,r.jsx)(n.li,{children:"Shortest path to get food"}),"\n",(0,r.jsx)(n.li,{children:"Graph valid tree"}),"\n",(0,r.jsx)(n.li,{children:"Course schedule 2"}),"\n",(0,r.jsx)(n.li,{children:"Number of connected components in a unidirect graph"}),"\n",(0,r.jsx)(n.li,{children:"Minimum knight moves"}),"\n",(0,r.jsx)(n.li,{children:"Cheapest flights within k stops"}),"\n",(0,r.jsx)(n.li,{children:"Word ladder"}),"\n",(0,r.jsx)(n.li,{children:"Longest increasing path in a matrix"}),"\n",(0,r.jsx)(n.li,{children:"Word search 2"}),"\n",(0,r.jsx)(n.li,{children:"Alien dictonary"}),"\n",(0,r.jsx)(n.li,{children:"Bus routes"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"heap",children:"Heap"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"K closest points to origin"}),"\n",(0,r.jsx)(n.li,{children:"Task scheduler"}),"\n",(0,r.jsx)(n.li,{children:"Top K frequent words"}),"\n",(0,r.jsx)(n.li,{children:"Find K closest elements"}),"\n",(0,r.jsx)(n.li,{children:"Kth largest element in a array"}),"\n",(0,r.jsx)(n.li,{children:"Find median from data stream"}),"\n",(0,r.jsx)(n.li,{children:"Merge k sorted lists"}),"\n",(0,r.jsx)(n.li,{children:"Smallest range convering elements from k lists"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"trie",children:"Trie"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Implement trie (prefix tree)"}),"\n",(0,r.jsx)(n.li,{children:"Word break"}),"\n",(0,r.jsx)(n.li,{children:"Design add and search words data structure"}),"\n",(0,r.jsx)(n.li,{children:"Desing in-memory file system"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"dynamic-programming",children:"Dynamic Programming"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Maximum subarray"}),"\n",(0,r.jsx)(n.li,{children:"Coin change"}),"\n",(0,r.jsx)(n.li,{children:"Partition equal subset sum"}),"\n",(0,r.jsx)(n.li,{children:"Unique paths"}),"\n",(0,r.jsx)(n.li,{children:"House robber"}),"\n",(0,r.jsx)(n.li,{children:"Maximum Product subarray"}),"\n",(0,r.jsx)(n.li,{children:"Longest increasing subsequence"}),"\n",(0,r.jsx)(n.li,{children:"Jump game"}),"\n",(0,r.jsx)(n.li,{children:"Maximal square"}),"\n",(0,r.jsx)(n.li,{children:"Decode ways"}),"\n",(0,r.jsx)(n.li,{children:"Combination sum IV"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"microservices",children:"Microservices"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["application architecture","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"application api"}),"\n",(0,r.jsx)(n.li,{children:"architecting"}),"\n",(0,r.jsx)(n.li,{children:"architecture documentation"}),"\n",(0,r.jsx)(n.li,{children:"dark energy and dark matter"}),"\n",(0,r.jsx)(n.li,{children:"loose coupling"}),"\n",(0,r.jsx)(n.li,{children:"microservice architecture"}),"\n",(0,r.jsx)(n.li,{children:"observability"}),"\n",(0,r.jsx)(n.li,{children:"refactoring to microservices"}),"\n",(0,r.jsx)(n.li,{children:"security"}),"\n",(0,r.jsx)(n.li,{children:"service collaboration"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["deployment","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["docker","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"multi-architecture docker images"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["development","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"software delivery metrics"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["microservices adoption","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"anti-patterns"}),"\n",(0,r.jsx)(n.li,{children:"refactoring to microservices"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"microservicesio updates"}),"\n",(0,r.jsxs)(n.li,{children:["pattern","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"microservice chassis"}),"\n",(0,r.jsx)(n.li,{children:"sagas"}),"\n",(0,r.jsx)(n.li,{children:"service template"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["service collaboration","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"implementing commands"}),"\n",(0,r.jsx)(n.li,{children:"implementing queries"}),"\n",(0,r.jsx)(n.li,{children:"inter-service communication"}),"\n",(0,r.jsx)(n.li,{children:"service discovery"}),"\n",(0,r.jsx)(n.li,{children:"resilience"}),"\n",(0,r.jsx)(n.li,{children:"service api"}),"\n",(0,r.jsx)(n.li,{children:"transactional messaging"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["service design","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"service collaboration"}),"\n",(0,r.jsx)(n.li,{children:"service granularity"}),"\n",(0,r.jsx)(n.li,{children:"service collaboration"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"algomonster",children:"AlgoMonster"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://www.youtube.com/watch?v=s5gWz9Fa1yo&t=56s&ab_channel=AlgoMonster",children:"Flow chart"})}),"\n"]})]})}function o(e={}){const{wrapper:n}={...(0,l.ah)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},4137:(e,n,i)=>{i.d(n,{ah:()=>a});var r=i(7294);function l(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function s(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,r)}return i}function c(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?s(Object(i),!0).forEach((function(n){l(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):s(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function t(e,n){if(null==e)return{};var i,r,l=function(e,n){if(null==e)return{};var i,r,l={},s=Object.keys(e);for(r=0;r<s.length;r++)i=s[r],n.indexOf(i)>=0||(l[i]=e[i]);return l}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)i=s[r],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(l[i]=e[i])}return l}var d=r.createContext({}),a=function(e){var n=r.useContext(d),i=n;return e&&(i="function"==typeof e?e(n):c(c({},n),e)),i},h={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},o=r.forwardRef((function(e,n){var i=e.components,l=e.mdxType,s=e.originalType,d=e.parentName,o=t(e,["components","mdxType","originalType","parentName"]),x=a(i),j=l,u=x["".concat(d,".").concat(j)]||x[j]||h[j]||s;return i?r.createElement(u,c(c({ref:n},o),{},{components:i})):r.createElement(u,c({ref:n},o))}));o.displayName="MDXCreateElement"}}]);