"use strict";(self.webpackChunkkushalarya_com=self.webpackChunkkushalarya_com||[]).push([[2778],{2041:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var t=i(5893),s=i(4137);const r={description:"Landing page for Design Patterns",sidebar_label:"Design Patterns"},l="Design Patterns",o={id:"DesignPatterns/index",title:"Design Patterns",description:"Landing page for Design Patterns",source:"@site/docs/DesignPatterns/index.md",sourceDirName:"DesignPatterns",slug:"/DesignPatterns/",permalink:"/notebook/DesignPatterns/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{description:"Landing page for Design Patterns",sidebar_label:"Design Patterns"},sidebar:"defaultSidebar",previous:{title:"The 48 Laws of Power",permalink:"/notebook/Books/The48LawsOfPower"},next:{title:"Movies",permalink:"/notebook/Movies/"}},a={},c=[{value:"References",id:"references",level:2},{value:"Notes:",id:"notes",level:2},{value:"Pillars of OOP",id:"pillars-of-oop",level:2},{value:"1. Abstraction",id:"1-abstraction",level:3},{value:"2. Encapsulation",id:"2-encapsulation",level:3},{value:"3. Polymorphism",id:"3-polymorphism",level:3},{value:"4. Inheritance",id:"4-inheritance",level:3},{value:"Relation between Objects",id:"relation-between-objects",level:2},{value:"Classification of Patterns",id:"classification-of-patterns",level:2},{value:"Features of Good Design",id:"features-of-good-design",level:2},{value:"Design Principles",id:"design-principles",level:2},{value:"SOLID Principles",id:"solid-principles",level:2}];function d(e){const n={a:"a",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,s.ah)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"design-patterns",children:"Design Patterns"}),"\n",(0,t.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://refactoring.guru/design-patterns",children:"Design Patterns, Refactoring Guru"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"notes",children:"Notes:"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"O"}),"bject ",(0,t.jsx)(n.strong,{children:"O"}),"riented ",(0,t.jsx)(n.strong,{children:"P"}),"rogramming is paradigm based on concept of wrapping peices of data, and behaviour related to that data, into special bundles called ",(0,t.jsx)(n.strong,{children:"Objects"}),", which are constructed from blueprints aka ",(0,t.jsx)(n.strong,{children:"Classes"})]}),"\n",(0,t.jsx)(n.h2,{id:"pillars-of-oop",children:"Pillars of OOP"}),"\n",(0,t.jsx)(n.h3,{id:"1-abstraction",children:"1. Abstraction"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["The concept of simplifying complex reality, by modeling classes based on the ",(0,t.jsx)(n.strong,{children:"essential properties and behaviors"})," they exhibit."]}),"\n",(0,t.jsx)(n.li,{children:"It cannot be instantiated directly and serves as a blueprint for other classes."}),"\n",(0,t.jsx)(n.li,{children:"It defines one or more abstract methods, which are methods without an implementation. Subclasses that inherit from an abstract class must provide concrete implementations for these abstract methods."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"2-encapsulation",children:"2. Encapsulation"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"It is a way of restricting direct access to some of an object's components while exposing others through well-defined interfaces."}),"\n",(0,t.jsx)(n.li,{children:"Main goals of encapsulation are - Data hiding, Access Control, Abstraction"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"3-polymorphism",children:"3. Polymorphism"}),"\n",(0,t.jsx)(n.p,{children:"Polymorphism is the ability of a program to detect the real class of an object and call its implementation even when its real type is unknown in the current context."}),"\n",(0,t.jsx)(n.h3,{id:"4-inheritance",children:"4. Inheritance"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Inheritance allows you to create a new class that is a modified or specialized version of an existing class, promoting code reuse and the creation of a hierarchical class structure."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"relation-between-objects",children:"Relation between Objects"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Association Classes\na. Aggregation\nb. Composition"}),"\n",(0,t.jsx)(n.li,{children:"Dependecy\na. Compile-time dependency\nb. Runtime dependency"}),"\n",(0,t.jsx)(n.li,{children:"Inheritance (Generalization)"}),"\n",(0,t.jsx)(n.li,{children:"Realization (Interface Implementation)"}),"\n",(0,t.jsx)(n.li,{children:"Composition Over Inheritance (COI)"}),"\n",(0,t.jsx)(n.li,{children:"Dependency Injection"}),"\n",(0,t.jsx)(n.li,{children:"Collaboration\n9 Peer (Sibiling) Objects"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"classification-of-patterns",children:"Classification of Patterns"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Creational Patterns: provide ",(0,t.jsx)(n.strong,{children:"object creation mechanisms"})," that increase felxiblity & reuse of existing code."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Structural Patterns: explain how to ",(0,t.jsx)(n.strong,{children:"assemble objects and classes into larger structures"}),", still keeping the structures flexible and efficient."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Behavioural Patterns: take care of ",(0,t.jsx)(n.strong,{children:"effective communication & the assignment of responsibilities"})," between objects."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"features-of-good-design",children:"Features of Good Design"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Code reuse"}),"\n",(0,t.jsx)(n.li,{children:"Extensibility"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"design-principles",children:"Design Principles"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Encapsulate what varies","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Encapsulation on a method level"}),"\n",(0,t.jsx)(n.li,{children:"Encapsulation on a class level"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"Program to an Interface, not an Implementation"}),"\n",(0,t.jsx)(n.li,{children:"Favor Composition over inheritance"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"solid-principles",children:"SOLID Principles"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"S"}),"ingle Responsiblity Principle"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"O"}),"pen/Closed Principle"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"L"}),"iskov Substitution Principle"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"I"}),"nterface Segregation Principle"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"D"}),"ependency Inversion Principle"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.ah)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},4137:(e,n,i)=>{i.d(n,{ah:()=>c});var t=i(7294);function s(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function r(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,t)}return i}function l(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?r(Object(i),!0).forEach((function(n){s(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function o(e,n){if(null==e)return{};var i,t,s=function(e,n){if(null==e)return{};var i,t,s={},r=Object.keys(e);for(t=0;t<r.length;t++)i=r[t],n.indexOf(i)>=0||(s[i]=e[i]);return s}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)i=r[t],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(s[i]=e[i])}return s}var a=t.createContext({}),c=function(e){var n=t.useContext(a),i=n;return e&&(i="function"==typeof e?e(n):l(l({},n),e)),i},d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},h=t.forwardRef((function(e,n){var i=e.components,s=e.mdxType,r=e.originalType,a=e.parentName,h=o(e,["components","mdxType","originalType","parentName"]),p=c(i),u=s,j=p["".concat(a,".").concat(u)]||p[u]||d[u]||r;return i?t.createElement(j,l(l({ref:n},h),{},{components:i})):t.createElement(j,l({ref:n},h))}));h.displayName="MDXCreateElement"}}]);